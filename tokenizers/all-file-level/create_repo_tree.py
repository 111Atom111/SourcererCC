import loggingimport multiprocessing as mpfrom multiprocessing import Processimport reimport osimport collectionsfrom lockfile import LockFile# foldersPATH_tokens_folder = 'tokens'PATH_bookkeeping_file_folder = 'bookkeeping_files'PATH_bookkeeping_proj_folder = 'bookkeeping_projs'PATH_TARGET = 'MUSE_MIRROR_C++_tokens'token_files = [f for f in os.listdir(PATH_tokens_folder) if os.path.isfile(os.path.join(PATH_tokens_folder, f))]book_proj_files = [f for f in os.listdir(PATH_bookkeeping_proj_folder) if os.path.isfile(os.path.join(PATH_bookkeeping_proj_folder, f))]book_files_files = [f for f in os.listdir(PATH_bookkeeping_file_folder) if os.path.isfile(os.path.join(PATH_bookkeeping_file_folder, f))]print '1'number = 0while ('tokens_'+str(number)+'.txt') in token_files and ('bookkeeping_proj_'+str(number)+'.txt') in book_proj_files and ('bookkeeping_file_'+str(number)+'.txt') in book_files_files:	with open(os.path.join(PATH_tokens_folder,'tokens_'+str(number)+'.txt'),'r') as tokens, open(os.path.join(PATH_bookkeeping_proj_folder,'bookkeeping_proj_'+str(number)+'.txt'),'r') as projects, open(os.path.join(PATH_bookkeeping_file_folder,'bookkeeping_file_'+str(number)+'.txt'),'r') as files:		print '2'		files_dict = {}		for file in files:			files_dict[(file.split(',')[0], file.split(',')[1])] = file.split(',')[2][71:-1]		#	#print file.split(',')[0], file.split(',')[1], file.split(',')[2][71:-1], '|'		projs_dict = {}		for project in projects:			projs_dict[project.split(',')[0]] = project.split(',')[1][1:-1]			if not os.path.exists(os.path.join(PATH_TARGET,project.split(',')[1][1:-1])):				os.makedirs(os.path.join(PATH_TARGET,project.split(',')[1][1:-1]))			print project.split(',')[0], project.split(',')[1][1:-1], '|'		for token in tokens:			print token			# project id			print projs_dict[token.split(',')[0]]			# intra_project file path			print files_dict[(token.split(',')[0],token.split(',')[1].split('@#@')[0])]			# file tokens			print files_dict[(token.split(',')[0],token.split(',')[1].split('@#@')[0])]+'@#@'+token.split('@#@')[1]			with open(os.path.join(PATH_TARGET,projs_dict[token.split(',')[0]])+'/tokens.txt','a') as tokens_file:				tokens_file.write(files_dict[(token.split(',')[0],token.split(',')[1].split('@#@')[0])]+'@#@'+token.split('@#@')[1])	number +=1